<?php
// $Id: publication_date.module,v 1.1 2009/07/20 19:49:00 cleverage Exp $
/**
 * @file
 * Add a field containing the publication date.
 *
 * @author Clever Age
 * @author Emmanuelle Gouleau
 * @author Tristan Marly
 *
 * Initial D7 Port: Joost van der Locht
 */


/**
 * Implements hook_node_load().
 */
function publication_date_node_load($nodes, $types) {
  foreach($nodes as $node) {
      $node->published_at = _publication_date_get_date($node->nid);

      // we have to manage the 'old nodes', i.e nodes that have been published BEFORE the activation
      // of this module.
      if (!$node->published_at) {
      $row = db_select('node', 'n')
        ->fields('n', array('created', 'status'))
        ->condition('nid', $node->nid)
        ->execute()
        ->fetchAssoc();
        if ($row && $row['status'] == 1) {
          $node->published_at = $row['created'];
        }
      }
  }
}

/**
 * Implements hook_node_insert().
 */
function publication_date_node_insert($node) {
  // save publication date
  _publication_date_set_date($node);
}

/**
 * Implements hook_node_update().
 */
function publication_date_node_update($node) {
  // save publication date
  _publication_date_set_date($node);
}

/**
 * Implements hook_node_delete().
 */
function publication_date_node_delete($node) {
  $date = _publication_date_get_date($node->nid);
  if ($date) {
    db_delete('publication_date')
      ->condition('nid', $node->nid)
      ->execute();
  }
}


/**
 * Save publication date and set it to the node.
 */
function _publication_date_set_date($node) {
  if ($node->status == 1) {
    // Already in database ?
    $date = _publication_date_get_date($node->nid);
    if (!$date) {
      // No, we insert it.
      $id = db_insert('publication_date')
        ->fields(array(
          'nid' => $node->nid,
          'published_at' => empty($node->published_at) ? REQUEST_TIME : $node->published_at,
        ))
        ->execute();
    }
  }
  else {
    // Already in base ?
    $date = _publication_date_get_date($node->nid);
    if ($date) {
      // Yes, so we remove it.
      db_delete('publication_date')
        ->condition('nid', $node->nid)
        ->execute();
    }
  }

  // Set the value also to be used later on by other modules invoking the hook.
  $node->published_at = _publication_date_get_date($node->nid);
}

/**
 * @return the publication date for the given node, or false if the node is not published
 */
function _publication_date_get_date($nid) {
  $date = db_query("SELECT published_at FROM {publication_date} WHERE nid = :nid", array(':nid' => $nid))->fetchField();
  return $date;
}

/**
 * Implements hook_views_api().
 */
function publication_date_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'publication_date') . '/includes/views',
  );
}

/**
 * Implementation of hook_form_alter().
 * Display the publication date on the node edit form
 * @note: This wont work where you have displaysuite/rel enabled
 */
function publication_date_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['type']) && isset($form['#node']) && $form['type']['#value'] . '_node_form' == $form_id) {
    $node = node_load($form["nid"]["#value"]);
    $form['author']['pubdate'] = array(
      '#type' => 'textfield',
      '#title' => t('Published on'),
      '#maxlength' => 25,
      '#description' => t('Format: %time. Leave blank to use the time of form submission.', array('%time' => format_date(REQUEST_TIME, 'custom', 'Y-m-d H:i:s O'))),
    );
    if ($node && $node->published_at) {
      $form['author']['pubdate']['#default_value'] = format_date($node->published_at, 'custom', 'Y-m-d H:i:s O');
    }
    $form['#validate'][] = 'publication_date_pubdate_validate';
    $form['#submit'][] = 'publication_date_pubdate_submit';
  }
}

/**
 * Validate the published date input
 */
function publication_date_pubdate_validate($form, &$form_state) {
  // Validate the "authored on" field. As of PHP 5.1.0, strtotime returns FALSE instead of -1 upon failure.
  if (!empty($form_state['values']['pubdate']) && strtotime($form_state['values']['pubdate']) <= 0) {
    form_set_error('pubdate', t('You have to specify a valid date for the published on field.'));
  }
}

/**
 * Update the published date
 */
function publication_date_pubdate_submit($form, &$form_state) {
  db_query("UPDATE {publication_date} SET published_at = :date WHERE nid = :nid", array(
   ':date' => strtotime($form_state['values']['pubdate']),
   ':nid' => $form_state['values']['nid'],
  ));
}